--- a/build/basics.rb	2014-01-29 01:18:27.000000000 +0700
+++ b/build/basics.rb	2014-02-20 20:42:31.959006701 +0700
@@ -172,6 +172,7 @@
 	flags << " -fno-omit-frame-pointers" if USE_ASAN
 	flags << " -DPASSENGER_DISABLE_THREAD_LOCAL_STORAGE" if !boolean_option('PASSENGER_THREAD_LOCAL_STORAGE', true)
 end
+EXTRA_PRE_CXXFLAGS << " #{ENV['CXXFLAGS']}"
 
 # Extra linker flags that should always be passed to the linker.
 # These should be included first in the command string.
--- a/build/packaging.rb	2014-01-25 00:10:25.000000000 +0700
+++ b/build/packaging.rb	2014-01-26 14:11:21.982964065 +0700
@@ -396,7 +396,7 @@
 end
 
 desc "Create a fakeroot, useful for building native packages"
-task :fakeroot => [:apache2, :nginx, 'nginx:as_dynamic_module', :doc] do
+task :fakeroot => [:nginx, 'nginx:as_dynamic_module'] do
   require 'rbconfig'
   require 'fileutils'
   include RbConfig
@@ -415,20 +415,19 @@
   psg_nodelibdir = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/node"
   psg_libdir     = "#{fs_libdir}/#{GLOBAL_NAMESPACE_DIRNAME}"
   psg_native_support_dir = ENV["RUBYARCHDIR"] || "#{fs_libdir}/ruby/#{CONFIG['ruby_version']}/#{CONFIG['arch']}"
-  psg_support_binaries_dir = "#{fs_libdir}/#{GLOBAL_NAMESPACE_DIRNAME}/support-binaries"
+  psg_support_binaries_dir = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/support-binaries"
   psg_helper_scripts_dir = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/helper-scripts"
-  psg_resources_dir      = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}"
-  psg_include_dir        = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/include"
+  psg_resources_dir      = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/resources"
+  psg_include_dir        = "#{fs_prefix}/include/#{GLOBAL_NAMESPACE_DIRNAME}"
   psg_docdir     = "#{fs_docdir}/#{GLOBAL_NAMESPACE_DIRNAME}"
   psg_bindir     = "#{fs_bindir}"
   psg_sbindir    = "#{fs_sbindir}"
-  psg_apache2_module_path       = ENV['APACHE2_MODULE_PATH'] || "#{fs_libdir}/apache2/modules/mod_passenger.so"
-  psg_ruby_extension_source_dir = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/ruby_extension_source"
-  psg_nginx_module_source_dir   = "#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/ngx_http_passenger_module"
+  psg_ruby_extension_source_dir = "#{fs_prefix}/src/#{GLOBAL_NAMESPACE_DIRNAME}/ruby_extension_source"
+  psg_nginx_module_source_dir   = "#{fs_prefix}/src/#{GLOBAL_NAMESPACE_DIRNAME}/ngx_http_passenger_module"
   psg_ruby       = ENV['RUBY'] || "#{fs_bindir}/ruby"
   psg_free_ruby  = ENV['FREE_RUBY'] || "/usr/bin/env ruby"
 
-  fakeroot = "#{PKG_DIR}/fakeroot"
+  fakeroot = ENV['D']
   fake_rubylibdir = "#{fakeroot}#{psg_rubylibdir}"
   fake_nodelibdir = "#{fakeroot}#{psg_nodelibdir}"
   fake_libdir     = "#{fakeroot}#{psg_libdir}"
@@ -438,15 +437,11 @@
   fake_docdir     = "#{fakeroot}#{psg_docdir}"
   fake_bindir     = "#{fakeroot}#{psg_bindir}"
   fake_sbindir    = "#{fakeroot}#{psg_sbindir}"
-  fake_apache2_module_path       = "#{fakeroot}#{psg_apache2_module_path}"
   fake_ruby_extension_source_dir = "#{fakeroot}#{psg_ruby_extension_source_dir}"
   fake_nginx_module_source_dir   = "#{fakeroot}#{psg_nginx_module_source_dir}"
 
   packaging_method = ENV['NATIVE_PACKAGING_METHOD'] || ENV['PACKAGING_METHOD'] || "deb"
 
-  sh "rm -rf #{fakeroot}"
-  sh "mkdir -p #{fakeroot}"
-
   # Ruby sources
   sh "mkdir -p #{fake_rubylibdir}"
   sh "cp #{PhusionPassenger.ruby_libdir}/phusion_passenger.rb #{fake_rubylibdir}/"
@@ -529,10 +519,6 @@
     change_shebang("#{fake_sbindir}/#{exe}", shebang)
   end
 
-  # Apache 2 module
-  sh "mkdir -p #{File.dirname(fake_apache2_module_path)}"
-  sh "cp #{APACHE2_TARGET} #{fake_apache2_module_path}"
-
   # Ruby extension sources
   sh "mkdir -p #{fake_ruby_extension_source_dir}"
   sh "cp -R #{PhusionPassenger.ruby_extension_source_dir}/* #{fake_ruby_extension_source_dir}"
@@ -537,8 +523,8 @@
   sh "mkdir -p #{fake_ruby_extension_source_dir}"
   sh "cp -R #{PhusionPassenger.ruby_extension_source_dir}/* #{fake_ruby_extension_source_dir}"
 
-  puts "Creating #{fake_rubylibdir}/phusion_passenger/locations.ini"
-  File.open("#{fake_rubylibdir}/phusion_passenger/locations.ini", "w") do |f|
+  puts "Creating #{fakeroot}/#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/locations.ini"
+  File.open("#{fakeroot}/#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/locations.ini", "w") do |f|
     f.puts "[locations]"
     f.puts "natively_packaged=true"
     f.puts "native_packaging_method=#{native_packaging_method}"
@@ -551,7 +537,7 @@
     f.puts "doc_dir=#{psg_docdir}"
     f.puts "ruby_libdir=#{psg_rubylibdir}"
     f.puts "node_libdir=#{psg_nodelibdir}"
-    f.puts "apache2_module_path=#{psg_apache2_module_path}"
+    f.puts "apache2_module_path=/dev/null"
     f.puts "ruby_extension_source_dir=#{psg_ruby_extension_source_dir}"
     f.puts "nginx_module_source_dir=#{psg_nginx_module_source_dir}"
   end
@@ -557,7 +543,7 @@
   end
 
   # Sanity check the locations.ini file
-  options = PhusionPassenger.parse_ini_file("#{fake_rubylibdir}/phusion_passenger/locations.ini")
+  options = PhusionPassenger.parse_ini_file("#{fakeroot}/#{fs_datadir}/#{GLOBAL_NAMESPACE_DIRNAME}/locations.ini")
   PhusionPassenger::REQUIRED_LOCATIONS_INI_FIELDS.each do |field|
     if !options[field.to_s]
       raise "Bug in build/packaging.rb: the generated locations.ini is missing the '#{field}' field"
