diff --git a/Telegram/SourceFiles/export/data/export_data_types.cpp b/Telegram/SourceFiles/export/data/export_data_types.cpp
index 3dc7b4e87..72ea4e6d6 100644
--- a/Telegram/SourceFiles/export/data/export_data_types.cpp
+++ b/Telegram/SourceFiles/export/data/export_data_types.cpp
@@ -242,7 +242,8 @@ Image ParseMaxImage(
 				result.width = data.vw.v;
 				result.height = data.vh.v;
 				result.file.location = ParseLocation(data.vlocation);
-				if constexpr (MTPDphotoCachedSize::Is<decltype(data)>()) {
+				constexpr bool is = MTPDphotoCachedSize::Is<decltype(data)>();
+				if constexpr (is) {
 					result.file.content = data.vbytes.v;
 					result.file.size = result.file.content.size();
 				} else {
@@ -431,7 +432,8 @@ Image ParseDocumentThumb(
 		result.width = data.vw.v;
 		result.height = data.vh.v;
 		result.file.location = ParseLocation(data.vlocation);
-		if constexpr (MTPDphotoCachedSize::Is<decltype(data)>()) {
+		constexpr bool is = MTPDphotoCachedSize::Is<decltype(data)>();
+		if constexpr (is) {
 			result.file.content = data.vbytes.v;
 			result.file.size = result.file.content.size();
 		} else {
@@ -1122,7 +1124,8 @@ Message ParseMessage(
 	auto result = Message();
 	data.match([&](const auto &data) {
 		result.id = data.vid.v;
-		if constexpr (!MTPDmessageEmpty::Is<decltype(data)>()) {
+		constexpr bool is = MTPDmessageEmpty::Is<decltype(data)>();
+		if constexpr (!is) {
 			result.toId = ParsePeerId(data.vto_id);
 			const auto peerId = (!data.is_out()
 				&& data.has_from_id()
diff --git a/Telegram/SourceFiles/export/export_api_wrap.cpp b/Telegram/SourceFiles/export/export_api_wrap.cpp
index f183f3b86..54bf9b5d2 100644
--- a/Telegram/SourceFiles/export/export_api_wrap.cpp
+++ b/Telegram/SourceFiles/export/export_api_wrap.cpp
@@ -720,7 +720,8 @@ void ApiWrap::handleUserpicsSlice(const MTPphotos_Photos &result) {
 	Expects(_userpicsProcess != nullptr);
 
 	result.match([&](const auto &data) {
-		if constexpr (MTPDphotos_photos::Is<decltype(data)>()) {
+		constexpr bool is = MTPDphotos_photos::Is<decltype(data)>();
+		if constexpr (is) {
 			_userpicsProcess->lastSlice = true;
 		}
 		loadUserpicsFiles(Data::ParseUserpicsSlice(
@@ -1257,7 +1258,8 @@ void ApiWrap::requestMessagesSlice() {
 		result.match([&](const MTPDmessages_messagesNotModified &data) {
 			error("Unexpected messagesNotModified received.");
 		}, [&](const auto &data) {
-			if constexpr (MTPDmessages_messages::Is<decltype(data)>()) {
+			constexpr bool is = MTPDmessages_messages::Is<decltype(data)>();
+			if constexpr (is) {
 				_chatProcess->lastSlice = true;
 			}
 			loadMessagesFiles(Data::ParseMessagesSlice(
