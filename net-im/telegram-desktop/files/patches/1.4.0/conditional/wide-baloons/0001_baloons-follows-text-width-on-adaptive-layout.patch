diff --git a/Telegram/SourceFiles/history/history_media_types.cpp b/Telegram/SourceFiles/history/history_media_types.cpp
--- a/Telegram/SourceFiles/history/history_media_types.cpp	2018-04-30 20:53:10.109149373 +0700
+++ b/Telegram/SourceFiles/history/history_media_types.cpp	2018-05-01 06:31:29.929780855 +0700
@@ -251,7 +251,7 @@ QSize HistoryPhoto::countOptimalSize() {
 	if (!tw || !th) {
 		tw = th = 1;
 	}
-	if (tw > st::maxMediaSize) {
+	if (!Adaptive::ChatWide() && tw > st::maxMediaSize) {
 		th = (st::maxMediaSize * th) / tw;
 		tw = st::maxMediaSize;
 	}
@@ -279,7 +279,7 @@ QSize HistoryPhoto::countOptimalSize() {
 
 QSize HistoryPhoto::countCurrentSize(int newWidth) {
 	int tw = convertScale(_data->full->width()), th = convertScale(_data->full->height());
-	if (tw > st::maxMediaSize) {
+	if (!Adaptive::ChatWide() && tw > st::maxMediaSize) {
 		th = (st::maxMediaSize * th) / tw;
 		tw = st::maxMediaSize;
 	}
@@ -1261,8 +1261,12 @@ QSize HistoryDocument::countOptimalSize(
 
 	if (auto named = Get<HistoryDocumentNamed>()) {
 		accumulate_max(maxWidth, tleft + named->_namew + tright);
+		if (Adaptive::ChatWide() && captioned) {
+			accumulate_max(maxWidth, captioned->_caption.maxWidth());
+		} else {
 		accumulate_min(maxWidth, st::msgMaxWidth);
 	}
+	}
 
 	auto minHeight = 0;
 	if (thumbed) {
diff --git a/Telegram/SourceFiles/history/history_widget.cpp b/Telegram/SourceFiles/history/history_widget.cpp
--- a/Telegram/SourceFiles/history/history_widget.cpp	2018-04-30 20:53:10.109149373 +0700
+++ b/Telegram/SourceFiles/history/history_widget.cpp	2018-05-01 16:45:58.527903175 +0700
@@ -558,7 +558,20 @@ HistoryWidget::HistoryWidget(
 
 	connect(&_updateEditTimeLeftDisplay, SIGNAL(timeout()), this, SLOT(updateField()));
 
-	subscribe(Adaptive::Changed(), [this] { update(); });
+	subscribe(Adaptive::Changed(), [this] {
+/*
+		if (_history) {
+			_history->setHasPendingResizedItems();
+		}
+		updateHistoryGeometry(false, false, {ScrollChangeAdd, App::main() ? App::main()->contentScrollAddToY() : 0});
+*/
+		/*
+		 * Previously, similar code (there was `_history->setPendingResize();`, and now it is only setHasPendingResizedItems)
+		 * used to work properly (baloons was resized not only by width, but also by height). For now this behaviour is broken
+		 * and I have totally no idea how to fix this (I tried many hacks with no luck). So, if you can fix it - contributions are welcome.
+		 */
+		update();
+	});
 	Auth().data().itemRemoved(
 	) | rpl::start_with_next(
 		[this](auto item) { itemRemoved(item); },
diff --git a/Telegram/SourceFiles/history/view/history_view_element.cpp b/Telegram/SourceFiles/history/view/history_view_element.cpp
--- a/Telegram/SourceFiles/history/view/history_view_element.cpp	2018-04-30 20:27:05.411683123 +0700
+++ b/Telegram/SourceFiles/history/view/history_view_element.cpp	2018-04-30 20:57:17.286053974 +0700
@@ -94,17 +94,6 @@ void UnreadBar::paint(Painter &p, int y,
 	p.setFont(st::historyUnreadBarFont);
 	p.setPen(st::historyUnreadBarFg);
 
-	int left = st::msgServiceMargin.left();
-	int maxwidth = w;
-	if (Adaptive::ChatWide()) {
-		maxwidth = qMin(
-			maxwidth,
-			st::msgMaxWidth
-				+ 2 * st::msgPhotoSkip
-				+ 2 * st::msgMargin.left());
-	}
-	w = maxwidth;
-
 	const auto skip = st::historyUnreadBarHeight
 		- 2 * st::lineWidth
 		- st::historyUnreadBarFont->height;
diff --git a/Telegram/SourceFiles/history/view/history_view_message.cpp b/Telegram/SourceFiles/history/view/history_view_message.cpp
--- a/Telegram/SourceFiles/history/view/history_view_message.cpp	2018-04-30 20:27:05.411683123 +0700
+++ b/Telegram/SourceFiles/history/view/history_view_message.cpp	2018-05-01 16:30:02.281200596 +0700
@@ -1535,7 +1535,9 @@ QRect Message::countGeometry() const {
 	//	contentLeft += st::msgPhotoSkip - (hmaxwidth - hwidth);
 	}
 	accumulate_min(contentWidth, maxWidth());
+	if (!Adaptive::ChatWide()) {
 	accumulate_min(contentWidth, st::msgMaxWidth);
+	}
 	if (mediaWidth < contentWidth) {
 		const auto textualWidth = plainMaxWidth();
 		if (mediaWidth < textualWidth) {
@@ -1576,7 +1578,9 @@ int Message::resizeContentGetHeight(int
 		contentWidth -= st::msgPhotoSkip;
 	}
 	accumulate_min(contentWidth, maxWidth());
+	if (!Adaptive::ChatWide()) { // not sure if it is enough, and if it is right place. If bug - take this into account.
 	accumulate_min(contentWidth, st::msgMaxWidth);
+	}
 	if (mediaDisplayed) {
 		media->resizeGetHeight(contentWidth);
 		if (media->width() < contentWidth) {
diff --git i/Telegram/SourceFiles/history/view/history_view_service_message.cpp w/Telegram/SourceFiles/history/view/history_view_service_message.cpp
--- a/Telegram/SourceFiles/history/view/history_view_service_message.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_service_message.cpp
@@ -158,11 +158,7 @@ void paintBubblePart(Painter &p, int x, int y, int width, int height, SideStyle

 void paintPreparedDate(Painter &p, const QString &dateText, int dateTextWidth, int y, int w) {
 	int left = st::msgServiceMargin.left();
-	int maxwidth = w;
-	if (Adaptive::ChatWide()) {
-		maxwidth = qMin(maxwidth, WideChatWidth());
-	}
-	w = maxwidth - st::msgServiceMargin.left() - st::msgServiceMargin.left();
+	w = w - st::msgServiceMargin.left() - st::msgServiceMargin.left();

 	left += (w - dateTextWidth - st::msgServicePadding.left() - st::msgServicePadding.right()) / 2;
 	int height = st::msgServicePadding.top() + st::msgServiceFont->height + st::msgServicePadding.bottom();
@@ -304,9 +300,6 @@ not_null<HistoryService*> Service::message() const {

 QRect Service::countGeometry() const {
 	auto result = QRect(0, 0, width(), height());
-	if (Adaptive::ChatWide()) {
-		result.setWidth(qMin(result.width(), st::msgMaxWidth + 2 * st::msgPhotoSkip + 2 * st::msgMargin.left()));
-	}
 	return result.marginsRemoved(st::msgServiceMargin);
 }

@@ -327,9 +320,6 @@ QSize Service::performCountCurrentSize(int newWidth) {
 		item->_textHeight = 0;
 	} else {
 		auto contentWidth = newWidth;
-		if (Adaptive::ChatWide()) {
-			accumulate_min(contentWidth, st::msgMaxWidth + 2 * st::msgPhotoSkip + 2 * st::msgMargin.left());
-		}
 		contentWidth -= st::msgServiceMargin.left() + st::msgServiceMargin.left(); // two small margins
 		if (contentWidth < st::msgServicePadding.left() + st::msgServicePadding.right() + 1) {
 			contentWidth = st::msgServicePadding.left() + st::msgServicePadding.right() + 1;
